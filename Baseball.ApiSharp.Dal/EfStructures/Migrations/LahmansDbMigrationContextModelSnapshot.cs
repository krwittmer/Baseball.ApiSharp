// <auto-generated />
using System;
using Baseball.ApiSharp.Dal.EfStructures;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Baseball.ApiSharp.Dal.EfStructures.Migrations
{
    [DbContext(typeof(LahmansDbMigrationContext))]
    partial class LahmansDbMigrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.AllstarFull", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<short>("GameNum")
                        .HasColumnName("gameNum")
                        .HasColumnType("smallint");

                    b.Property<string>("GameId")
                        .HasColumnName("gameID")
                        .HasColumnType("varchar(12) CHARACTER SET utf8mb4")
                        .HasMaxLength(12);

                    b.Property<short?>("Gp")
                        .HasColumnName("GP")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("StartingPos")
                        .HasColumnName("startingPos")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.HasKey("PlayerId", "YearId", "GameNum")
                        .HasName("AllstarFull$Index_2BD68208_C8B4_4347");

                    b.ToTable("AllstarFull");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Appearances", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short?>("G1b")
                        .HasColumnName("G_1b")
                        .HasColumnType("smallint");

                    b.Property<short?>("G2b")
                        .HasColumnName("G_2b")
                        .HasColumnType("smallint");

                    b.Property<short?>("G3b")
                        .HasColumnName("G_3b")
                        .HasColumnType("smallint");

                    b.Property<short?>("GAll")
                        .HasColumnName("G_all")
                        .HasColumnType("smallint");

                    b.Property<short?>("GBatting")
                        .HasColumnName("G_batting")
                        .HasColumnType("smallint");

                    b.Property<short?>("GC")
                        .HasColumnName("G_c")
                        .HasColumnType("smallint");

                    b.Property<short?>("GCf")
                        .HasColumnName("G_cf")
                        .HasColumnType("smallint");

                    b.Property<short?>("GDefense")
                        .HasColumnName("G_defense")
                        .HasColumnType("smallint");

                    b.Property<short?>("GDh")
                        .HasColumnName("G_dh")
                        .HasColumnType("smallint");

                    b.Property<short?>("GLf")
                        .HasColumnName("G_lf")
                        .HasColumnType("smallint");

                    b.Property<short?>("GOf")
                        .HasColumnName("G_of")
                        .HasColumnType("smallint");

                    b.Property<short?>("GP")
                        .HasColumnName("G_p")
                        .HasColumnType("smallint");

                    b.Property<short?>("GPh")
                        .HasColumnName("G_ph")
                        .HasColumnType("smallint");

                    b.Property<short?>("GPr")
                        .HasColumnName("G_pr")
                        .HasColumnType("smallint");

                    b.Property<short?>("GRf")
                        .HasColumnName("G_rf")
                        .HasColumnType("smallint");

                    b.Property<short?>("GSs")
                        .HasColumnName("G_ss")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gs")
                        .HasColumnName("GS")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.HasKey("YearId", "TeamId", "PlayerId")
                        .HasName("Appearances$Index_70924BF9_C76C_4076");

                    b.ToTable("Appearances");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.AwardsManagers", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("AwardId")
                        .HasColumnName("awardID")
                        .HasColumnType("varchar(75) CHARACTER SET utf8mb4")
                        .HasMaxLength(75);

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Tie")
                        .HasColumnName("tie")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.HasKey("YearId", "AwardId", "LgId", "PlayerId")
                        .HasName("AwardsManagers$Index_5B79AD08_A7C1_426E");

                    b.ToTable("AwardsManagers");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.AwardsPlayers", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("AwardId")
                        .HasColumnName("awardID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Tie")
                        .HasColumnName("tie")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.HasKey("YearId", "AwardId", "LgId", "PlayerId")
                        .HasName("AwardsPlayers$Index_99C7A5A6_27CA_44FC");

                    b.ToTable("AwardsPlayers");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.AwardsShareManagers", b =>
                {
                    b.Property<string>("AwardId")
                        .HasColumnName("awardID")
                        .HasColumnType("varchar(25) CHARACTER SET utf8mb4")
                        .HasMaxLength(25);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<short?>("PointsMax")
                        .HasColumnName("pointsMax")
                        .HasColumnType("smallint");

                    b.Property<short?>("PointsWon")
                        .HasColumnName("pointsWon")
                        .HasColumnType("smallint");

                    b.Property<short?>("VotesFirst")
                        .HasColumnName("votesFirst")
                        .HasColumnType("smallint");

                    b.HasKey("AwardId", "YearId", "LgId", "PlayerId")
                        .HasName("AwardsShareManagers$Index_4D947987_0BEF_4B9B");

                    b.ToTable("AwardsShareManagers");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.AwardsSharePlayers", b =>
                {
                    b.Property<string>("AwardId")
                        .HasColumnName("awardID")
                        .HasColumnType("varchar(25) CHARACTER SET utf8mb4")
                        .HasMaxLength(25);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short?>("PointsMax")
                        .HasColumnName("pointsMax")
                        .HasColumnType("smallint");

                    b.Property<double?>("PointsWon")
                        .HasColumnName("pointsWon")
                        .HasColumnType("double");

                    b.Property<double?>("VotesFirst")
                        .HasColumnName("votesFirst")
                        .HasColumnType("double");

                    b.HasKey("AwardId", "YearId", "LgId", "PlayerId")
                        .HasName("AwardsSharePlayers$Index_020E6DB1_95E2_44F1");

                    b.ToTable("AwardsSharePlayers");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Batting", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<short>("Stint")
                        .HasColumnName("stint")
                        .HasColumnType("smallint");

                    b.Property<short?>("Ab")
                        .HasColumnName("AB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Bb")
                        .HasColumnName("BB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Cs")
                        .HasColumnName("CS")
                        .HasColumnType("smallint");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("GBatting")
                        .HasColumnName("G_batting")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gidp")
                        .HasColumnName("GIDP")
                        .HasColumnType("smallint");

                    b.Property<short?>("H")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hbp")
                        .HasColumnName("HBP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hr")
                        .HasColumnName("HR")
                        .HasColumnType("smallint");

                    b.Property<short?>("Ibb")
                        .HasColumnName("IBB")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("R")
                        .HasColumnType("smallint");

                    b.Property<short?>("Rbi")
                        .HasColumnName("RBI")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sb")
                        .HasColumnName("SB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sf")
                        .HasColumnName("SF")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sh")
                        .HasColumnName("SH")
                        .HasColumnType("smallint");

                    b.Property<short?>("So")
                        .HasColumnName("SO")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("_2b")
                        .HasColumnName("2B")
                        .HasColumnType("smallint");

                    b.Property<short?>("_3b")
                        .HasColumnName("3B")
                        .HasColumnType("smallint");

                    b.HasKey("PlayerId", "YearId", "Stint")
                        .HasName("Batting$Index_7170BE9D_268A_46B8");

                    b.ToTable("Batting");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.BattingPost", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("Round")
                        .HasColumnName("round")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short?>("Ab")
                        .HasColumnName("AB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Bb")
                        .HasColumnName("BB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Cs")
                        .HasColumnName("CS")
                        .HasColumnType("smallint");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gidp")
                        .HasColumnName("GIDP")
                        .HasColumnType("smallint");

                    b.Property<short?>("H")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hbp")
                        .HasColumnName("HBP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hr")
                        .HasColumnName("HR")
                        .HasColumnType("smallint");

                    b.Property<short?>("Ibb")
                        .HasColumnName("IBB")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("R")
                        .HasColumnType("smallint");

                    b.Property<short?>("Rbi")
                        .HasColumnName("RBI")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sb")
                        .HasColumnName("SB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sf")
                        .HasColumnName("SF")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sh")
                        .HasColumnName("SH")
                        .HasColumnType("smallint");

                    b.Property<short?>("So")
                        .HasColumnName("SO")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("_2b")
                        .HasColumnName("2B")
                        .HasColumnType("smallint");

                    b.Property<short?>("_3b")
                        .HasColumnName("3B")
                        .HasColumnType("smallint");

                    b.HasKey("YearId", "Round", "PlayerId")
                        .HasName("BattingPost$Index_8C81D106_6E96_4318");

                    b.ToTable("BattingPost");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.CollegePlaying", b =>
                {
                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<string>("SchoolId")
                        .HasColumnName("schoolID")
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<short?>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.ToTable("CollegePlaying");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.ExtendedSchema.Tag", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasMaxLength(64);

                    b.Property<string>("DataFieldReferencesAsJson")
                        .HasColumnType("varchar(1024) CHARACTER SET utf8mb4")
                        .HasMaxLength(1024);

                    b.Property<string>("TagValue")
                        .HasColumnType("varchar(512) CHARACTER SET utf8mb4")
                        .HasMaxLength(512);

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.ExtendedSchema.TagRelationship", b =>
                {
                    b.Property<string>("TagRelationshipId")
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasMaxLength(64);

                    b.Property<string>("DataEntityId")
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasMaxLength(64);

                    b.Property<string>("TagId")
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasMaxLength(64);

                    b.HasKey("TagRelationshipId");

                    b.ToTable("TagRelationships");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Fielding", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<short>("Stint")
                        .HasColumnName("stint")
                        .HasColumnType("smallint");

                    b.Property<string>("Pos")
                        .HasColumnName("POS")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("A")
                        .HasColumnType("smallint");

                    b.Property<short?>("Cs")
                        .HasColumnName("CS")
                        .HasColumnType("smallint");

                    b.Property<short?>("Dp")
                        .HasColumnName("DP")
                        .HasColumnType("smallint");

                    b.Property<short?>("E")
                        .HasColumnType("smallint");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gs")
                        .HasColumnName("GS")
                        .HasColumnType("smallint");

                    b.Property<short?>("InnOuts")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("Pb")
                        .HasColumnName("PB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Po")
                        .HasColumnName("PO")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sb")
                        .HasColumnName("SB")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("Wp")
                        .HasColumnName("WP")
                        .HasColumnType("smallint");

                    b.Property<double?>("Zr")
                        .HasColumnName("ZR")
                        .HasColumnType("double");

                    b.HasKey("PlayerId", "YearId", "Stint", "Pos")
                        .HasName("Fielding$Index_97751AED_0076_4367");

                    b.ToTable("Fielding");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.FieldingOf", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<short>("Stint")
                        .HasColumnName("stint")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gcf")
                        .HasColumnType("smallint");

                    b.Property<short?>("Glf")
                        .HasColumnType("smallint");

                    b.Property<short?>("Grf")
                        .HasColumnType("smallint");

                    b.HasKey("PlayerId", "YearId", "Stint")
                        .HasName("FieldingOF$Index_8983CB74_6371_424E");

                    b.ToTable("FieldingOF");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.FieldingOfsplit", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<short>("Stint")
                        .HasColumnName("stint")
                        .HasColumnType("smallint");

                    b.Property<string>("Pos")
                        .HasColumnName("POS")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("A")
                        .HasColumnType("smallint");

                    b.Property<short?>("Cs")
                        .HasColumnName("CS")
                        .HasColumnType("smallint");

                    b.Property<short?>("Dp")
                        .HasColumnName("DP")
                        .HasColumnType("smallint");

                    b.Property<short?>("E")
                        .HasColumnType("smallint");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gs")
                        .HasColumnName("GS")
                        .HasColumnType("smallint");

                    b.Property<short?>("InnOuts")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("Pb")
                        .HasColumnName("PB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Po")
                        .HasColumnName("PO")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sb")
                        .HasColumnName("SB")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("Wp")
                        .HasColumnName("WP")
                        .HasColumnType("smallint");

                    b.Property<double?>("Zr")
                        .HasColumnName("ZR")
                        .HasColumnType("double");

                    b.HasKey("PlayerId", "YearId", "Stint", "Pos")
                        .HasName("FieldingOFsplit$Index_97751AED_0076_4367");

                    b.ToTable("FieldingOFsplit");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.FieldingPost", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("Round")
                        .HasColumnName("round")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("Pos")
                        .HasColumnName("POS")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("A")
                        .HasColumnType("smallint");

                    b.Property<short?>("Cs")
                        .HasColumnName("CS")
                        .HasColumnType("smallint");

                    b.Property<short?>("Dp")
                        .HasColumnName("DP")
                        .HasColumnType("smallint");

                    b.Property<short?>("E")
                        .HasColumnType("smallint");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gs")
                        .HasColumnName("GS")
                        .HasColumnType("smallint");

                    b.Property<short?>("InnOuts")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("Pb")
                        .HasColumnName("PB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Po")
                        .HasColumnName("PO")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sb")
                        .HasColumnName("SB")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("Tp")
                        .HasColumnName("TP")
                        .HasColumnType("smallint");

                    b.HasKey("PlayerId", "YearId", "Round", "Pos")
                        .HasName("FieldingPost$Index_E1DA201A_3B38_486D");

                    b.ToTable("FieldingPost");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.HallOfFame", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<short>("Yearid")
                        .HasColumnName("yearid")
                        .HasColumnType("smallint");

                    b.Property<string>("VotedBy")
                        .HasColumnName("votedBy")
                        .HasColumnType("varchar(64) CHARACTER SET utf8mb4")
                        .HasMaxLength(64);

                    b.Property<short?>("Ballots")
                        .HasColumnName("ballots")
                        .HasColumnType("smallint");

                    b.Property<string>("Category")
                        .HasColumnName("category")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Inducted")
                        .HasColumnName("inducted")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<short?>("Needed")
                        .HasColumnName("needed")
                        .HasColumnType("smallint");

                    b.Property<string>("NeededNote")
                        .HasColumnName("needed_note")
                        .HasColumnType("varchar(25) CHARACTER SET utf8mb4")
                        .HasMaxLength(25);

                    b.Property<short?>("Votes")
                        .HasColumnName("votes")
                        .HasColumnType("smallint");

                    b.HasKey("PlayerId", "Yearid", "VotedBy")
                        .HasName("HallOfFame$PrimaryKey");

                    b.ToTable("HallOfFame");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.HomeGames", b =>
                {
                    b.Property<int?>("Attendance")
                        .HasColumnName("attendance")
                        .HasColumnType("int");

                    b.Property<int?>("Games")
                        .HasColumnName("games")
                        .HasColumnType("int");

                    b.Property<string>("Leaguekey")
                        .HasColumnName("leaguekey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("Openings")
                        .HasColumnName("openings")
                        .HasColumnType("int");

                    b.Property<string>("Parkkey")
                        .HasColumnName("parkkey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Spanfirst")
                        .HasColumnName("spanfirst")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Spanlast")
                        .HasColumnName("spanlast")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Teamkey")
                        .HasColumnName("teamkey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("Yearkey")
                        .HasColumnName("yearkey")
                        .HasColumnType("int");

                    b.ToTable("HomeGames");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Managers", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short>("Inseason")
                        .HasColumnName("inseason")
                        .HasColumnType("smallint");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("L")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("PlyrMgr")
                        .HasColumnName("plyrMgr")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<short?>("Rank")
                        .HasColumnName("rank")
                        .HasColumnType("smallint");

                    b.Property<short?>("W")
                        .HasColumnType("smallint");

                    b.HasKey("YearId", "TeamId", "Inseason")
                        .HasName("Managers$Index_836DE8E8_FEBD_469A");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.ManagersHalf", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<short>("Half")
                        .HasColumnName("half")
                        .HasColumnType("smallint");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("Inseason")
                        .HasColumnName("inseason")
                        .HasColumnType("smallint");

                    b.Property<short?>("L")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("Rank")
                        .HasColumnName("rank")
                        .HasColumnType("smallint");

                    b.Property<short?>("W")
                        .HasColumnType("smallint");

                    b.HasKey("YearId", "TeamId", "PlayerId", "Half")
                        .HasName("ManagersHalf$Index_C2906EEF_9F52_4968");

                    b.ToTable("ManagersHalf");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Parks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Parkalias")
                        .HasColumnName("parkalias")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Parkkey")
                        .HasColumnName("parkkey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Parkname")
                        .HasColumnName("parkname")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.People", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("NameLast")
                        .HasColumnName("nameLast")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("NameFirst")
                        .HasColumnName("nameFirst")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Bats")
                        .HasColumnName("bats")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("BbrefId")
                        .HasColumnName("bbrefID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("BirthCity")
                        .HasColumnName("birthCity")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("BirthCountry")
                        .HasColumnName("birthCountry")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("BirthDay")
                        .HasColumnName("birthDay")
                        .HasColumnType("int");

                    b.Property<int?>("BirthMonth")
                        .HasColumnName("birthMonth")
                        .HasColumnType("int");

                    b.Property<string>("BirthState")
                        .HasColumnName("birthState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("BirthYear")
                        .HasColumnName("birthYear")
                        .HasColumnType("int");

                    b.Property<string>("DeathCity")
                        .HasColumnName("deathCity")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("DeathCountry")
                        .HasColumnName("deathCountry")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("DeathDay")
                        .HasColumnName("deathDay")
                        .HasColumnType("int");

                    b.Property<int?>("DeathMonth")
                        .HasColumnName("deathMonth")
                        .HasColumnType("int");

                    b.Property<string>("DeathState")
                        .HasColumnName("deathState")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("DeathYear")
                        .HasColumnName("deathYear")
                        .HasColumnType("int");

                    b.Property<string>("Debut")
                        .HasColumnName("debut")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("FinalGame")
                        .HasColumnName("finalGame")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("Height")
                        .HasColumnName("height")
                        .HasColumnType("int");

                    b.Property<string>("NameGiven")
                        .HasColumnName("nameGiven")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("RetroId")
                        .HasColumnName("retroID")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Throws")
                        .HasColumnName("throws")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("Weight")
                        .HasColumnName("weight")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "NameLast", "NameFirst")
                        .HasName("People$PrimaryKey");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Pitching", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<short>("Stint")
                        .HasColumnName("stint")
                        .HasColumnType("smallint");

                    b.Property<double?>("Baopp")
                        .HasColumnName("BAOpp")
                        .HasColumnType("double");

                    b.Property<short?>("Bb")
                        .HasColumnName("BB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Bfp")
                        .HasColumnName("BFP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Bk")
                        .HasColumnName("BK")
                        .HasColumnType("smallint");

                    b.Property<short?>("Cg")
                        .HasColumnName("CG")
                        .HasColumnType("smallint");

                    b.Property<short?>("Er")
                        .HasColumnName("ER")
                        .HasColumnType("smallint");

                    b.Property<double?>("Era")
                        .HasColumnName("ERA")
                        .HasColumnType("double");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gf")
                        .HasColumnName("GF")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gidp")
                        .HasColumnName("GIDP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gs")
                        .HasColumnName("GS")
                        .HasColumnType("smallint");

                    b.Property<short?>("H")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hbp")
                        .HasColumnName("HBP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hr")
                        .HasColumnName("HR")
                        .HasColumnType("smallint");

                    b.Property<short?>("Ibb")
                        .HasColumnName("IBB")
                        .HasColumnType("smallint");

                    b.Property<int?>("Ipouts")
                        .HasColumnName("IPouts")
                        .HasColumnType("int");

                    b.Property<short?>("L")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("R")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sf")
                        .HasColumnName("SF")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sh")
                        .HasColumnName("SH")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sho")
                        .HasColumnName("SHO")
                        .HasColumnType("smallint");

                    b.Property<short?>("So")
                        .HasColumnName("SO")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sv")
                        .HasColumnName("SV")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("W")
                        .HasColumnType("smallint");

                    b.Property<short?>("Wp")
                        .HasColumnName("WP")
                        .HasColumnType("smallint");

                    b.HasKey("PlayerId", "YearId", "Stint")
                        .HasName("Pitching$Index_481778A5_18F2_430E");

                    b.ToTable("Pitching");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.PitchingPost", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("Round")
                        .HasColumnName("round")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<double?>("Baopp")
                        .HasColumnName("BAOpp")
                        .HasColumnType("double");

                    b.Property<short?>("Bb")
                        .HasColumnName("BB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Bfp")
                        .HasColumnName("BFP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Bk")
                        .HasColumnName("BK")
                        .HasColumnType("smallint");

                    b.Property<short?>("Cg")
                        .HasColumnName("CG")
                        .HasColumnType("smallint");

                    b.Property<short?>("Er")
                        .HasColumnName("ER")
                        .HasColumnType("smallint");

                    b.Property<double?>("Era")
                        .HasColumnName("ERA")
                        .HasColumnType("double");

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gf")
                        .HasColumnName("GF")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gidp")
                        .HasColumnName("GIDP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Gs")
                        .HasColumnName("GS")
                        .HasColumnType("smallint");

                    b.Property<short?>("H")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hbp")
                        .HasColumnName("HBP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hr")
                        .HasColumnName("HR")
                        .HasColumnType("smallint");

                    b.Property<short?>("Ibb")
                        .HasColumnName("IBB")
                        .HasColumnType("smallint");

                    b.Property<int?>("Ipouts")
                        .HasColumnName("IPouts")
                        .HasColumnType("int");

                    b.Property<short?>("L")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("R")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sf")
                        .HasColumnName("SF")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sh")
                        .HasColumnName("SH")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sho")
                        .HasColumnName("SHO")
                        .HasColumnType("smallint");

                    b.Property<short?>("So")
                        .HasColumnName("SO")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sv")
                        .HasColumnName("SV")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("W")
                        .HasColumnType("smallint");

                    b.Property<short?>("Wp")
                        .HasColumnName("WP")
                        .HasColumnType("smallint");

                    b.HasKey("PlayerId", "YearId", "Round")
                        .HasName("PitchingPost$Index_E71336E6_AB00_432C");

                    b.ToTable("PitchingPost");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Salaries", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("PlayerId")
                        .HasColumnName("playerID")
                        .HasColumnType("varchar(9) CHARACTER SET utf8mb4")
                        .HasMaxLength(9);

                    b.Property<double?>("Salary")
                        .HasColumnName("salary")
                        .HasColumnType("double");

                    b.HasKey("YearId", "TeamId", "LgId", "PlayerId")
                        .HasName("Salaries$Index_E5568031_00FA_49CA");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Schools", b =>
                {
                    b.Property<string>("SchoolId")
                        .HasColumnName("schoolID")
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("varchar(55) CHARACTER SET utf8mb4")
                        .HasMaxLength(55);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasColumnType("varchar(55) CHARACTER SET utf8mb4")
                        .HasMaxLength(55);

                    b.Property<string>("NameFull")
                        .HasColumnName("name_full")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("varchar(55) CHARACTER SET utf8mb4")
                        .HasMaxLength(55);

                    b.HasKey("SchoolId")
                        .HasName("Schools$Index_3D308CF0_821E_4DAB");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.SeriesPost", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("Round")
                        .HasColumnName("round")
                        .HasColumnType("varchar(5) CHARACTER SET utf8mb4")
                        .HasMaxLength(5);

                    b.Property<string>("LgIdloser")
                        .HasColumnName("lgIDloser")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("LgIdwinner")
                        .HasColumnName("lgIDwinner")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<short?>("Losses")
                        .HasColumnName("losses")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamIdloser")
                        .HasColumnName("teamIDloser")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("TeamIdwinner")
                        .HasColumnName("teamIDwinner")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("Ties")
                        .HasColumnName("ties")
                        .HasColumnType("smallint");

                    b.Property<short?>("Wins")
                        .HasColumnName("wins")
                        .HasColumnType("smallint");

                    b.HasKey("YearId", "Round")
                        .HasName("SeriesPost$Index_4F4214D5_9891_4F3C");

                    b.ToTable("SeriesPost");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.Teams", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("Ab")
                        .HasColumnName("AB")
                        .HasColumnType("smallint");

                    b.Property<int?>("Attendance")
                        .HasColumnName("attendance")
                        .HasColumnType("int");

                    b.Property<short?>("Bb")
                        .HasColumnName("BB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Bba")
                        .HasColumnName("BBA")
                        .HasColumnType("smallint");

                    b.Property<int?>("Bpf")
                        .HasColumnName("BPF")
                        .HasColumnType("int");

                    b.Property<short?>("Cg")
                        .HasColumnName("CG")
                        .HasColumnType("smallint");

                    b.Property<short?>("Cs")
                        .HasColumnName("CS")
                        .HasColumnType("smallint");

                    b.Property<string>("DivId")
                        .HasColumnName("divID")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("DivWin")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<int?>("Dp")
                        .HasColumnName("DP")
                        .HasColumnType("int");

                    b.Property<int?>("E")
                        .HasColumnType("int");

                    b.Property<short?>("Er")
                        .HasColumnName("ER")
                        .HasColumnType("smallint");

                    b.Property<double?>("Era")
                        .HasColumnName("ERA")
                        .HasColumnType("double");

                    b.Property<double?>("Fp")
                        .HasColumnName("FP")
                        .HasColumnType("double");

                    b.Property<string>("FranchId")
                        .HasColumnName("franchID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("Ghome")
                        .HasColumnType("smallint");

                    b.Property<short?>("H")
                        .HasColumnType("smallint");

                    b.Property<short?>("Ha")
                        .HasColumnName("HA")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hbp")
                        .HasColumnName("HBP")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hr")
                        .HasColumnName("HR")
                        .HasColumnType("smallint");

                    b.Property<short?>("Hra")
                        .HasColumnName("HRA")
                        .HasColumnType("smallint");

                    b.Property<int?>("Ipouts")
                        .HasColumnName("IPouts")
                        .HasColumnType("int");

                    b.Property<short?>("L")
                        .HasColumnType("smallint");

                    b.Property<string>("LgWin")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Park")
                        .HasColumnName("park")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<int?>("Ppf")
                        .HasColumnName("PPF")
                        .HasColumnType("int");

                    b.Property<short?>("R")
                        .HasColumnType("smallint");

                    b.Property<short?>("Ra")
                        .HasColumnName("RA")
                        .HasColumnType("smallint");

                    b.Property<short?>("Rank")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sb")
                        .HasColumnName("SB")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sf")
                        .HasColumnName("SF")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sho")
                        .HasColumnName("SHO")
                        .HasColumnType("smallint");

                    b.Property<short?>("So")
                        .HasColumnName("SO")
                        .HasColumnType("smallint");

                    b.Property<short?>("Soa")
                        .HasColumnName("SOA")
                        .HasColumnType("smallint");

                    b.Property<short?>("Sv")
                        .HasColumnName("SV")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamIdbr")
                        .HasColumnName("teamIDBR")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("TeamIdlahman45")
                        .HasColumnName("teamIDlahman45")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("TeamIdretro")
                        .HasColumnName("teamIDretro")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<short?>("W")
                        .HasColumnType("smallint");

                    b.Property<string>("Wcwin")
                        .HasColumnName("WCWin")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("Wswin")
                        .HasColumnName("WSWin")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<short?>("_2b")
                        .HasColumnName("2B")
                        .HasColumnType("smallint");

                    b.Property<short?>("_3b")
                        .HasColumnName("3B")
                        .HasColumnType("smallint");

                    b.HasKey("YearId", "LgId", "TeamId")
                        .HasName("Teams$Index_285058F1_D841_4142");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.TeamsFranchises", b =>
                {
                    b.Property<string>("FranchId")
                        .HasColumnName("franchID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("Active")
                        .HasColumnName("active")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("FranchName")
                        .HasColumnName("franchName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Naassoc")
                        .HasColumnName("NAassoc")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.HasKey("FranchId")
                        .HasName("TeamsFranchises$Index_D181F923_2BF9_4281");

                    b.ToTable("TeamsFranchises");
                });

            modelBuilder.Entity("Baseball.ApiSharp.Data.Lahman.TeamsHalf", b =>
                {
                    b.Property<short>("YearId")
                        .HasColumnName("yearID")
                        .HasColumnType("smallint");

                    b.Property<string>("TeamId")
                        .HasColumnName("teamID")
                        .HasColumnType("varchar(3) CHARACTER SET utf8mb4")
                        .HasMaxLength(3);

                    b.Property<string>("LgId")
                        .HasColumnName("lgID")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("Half")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("DivId")
                        .HasColumnName("divID")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<string>("DivWin")
                        .HasColumnType("varchar(1) CHARACTER SET utf8mb4")
                        .HasMaxLength(1);

                    b.Property<short?>("G")
                        .HasColumnType("smallint");

                    b.Property<short?>("L")
                        .HasColumnType("smallint");

                    b.Property<short?>("Rank")
                        .HasColumnType("smallint");

                    b.Property<short?>("W")
                        .HasColumnType("smallint");

                    b.HasKey("YearId", "TeamId", "LgId", "Half")
                        .HasName("TeamsHalf$Index_3FD773F5_2FC0_415C");

                    b.ToTable("TeamsHalf");
                });
#pragma warning restore 612, 618
        }
    }
}
